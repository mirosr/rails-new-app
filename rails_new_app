#!/usr/bin/env bash

APP_NAME=$1
SCRIPT_NAME=$(basename $0)
BUNDLE_COMMAND=$(command -v bundle 2>/dev/null)
TEMPLATE_NAME=$2
if [ -z $TEMPLATE_NAME ]; then
  TEMPLATE_NAME='base'
fi
TEMPLATE="$(cd $(dirname $0) && pwd)/$TEMPLATE_NAME.rb"

# Check for a given application name
if [ -z $APP_NAME ]; then
  echo 'An application name should be given as first argument.' 
  echo 'Usage:'
  echo "  $SCRIPT_NAME APP_NAME"
  exit 1
fi

# Check if the application directory already exists
if [ -d "$APP_NAME" ]; then
  echo "Directory $APP_NAME already exists. Aborting!"
  exit 1
fi

# Check if the bundler gem is available
if [ -z "$BUNDLE_COMMAND" ]; then
  echo "bundle: command not found. Aborting!"
  exit 1
fi

# Start the process
echo "Rails app to be created: $APP_NAME"
echo "Template to be used    : $TEMPLATE_NAME"
echo

# Prepare the application directory
printf 'Creating application directory...'
mkdir $APP_NAME
cd $APP_NAME
echo ' done!'
printf 'Writing a sample Gemfile...'
cat >Gemfile <<EOL
source 'https://rubygems.org'
ruby '2.1.2'
gem 'rails', '3.2.19'
EOL
echo ' done!'

# Install rails in the application directory
printf 'Running bundle install...'
bundle install --quiet --path vendor/bundle &>/dev/null
if [ $? -eq 0 ]; then
  echo ' done!'
else
  echo ' fail!'
  exit 1
fi

# Generate a new rails application
echo 'Creating new rails application'
bundle exec rails new . -d postgresql -T -f --skip-bundle -m $TEMPLATE
